// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipalityRegistry.Api.Import;

#nullable disable

namespace MunicipalityRegistry.Api.Import.Migrations
{
    [DbContext(typeof(ImportContext))]
    [Migration("20240709081906_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MunicipalityRegistry.Api.Import.MunicipalityMerger", b =>
                {
                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<string>("MunicipalityIdsToMergeWithAsString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MunicipalityIdsToMergeWith");

                    b.Property<Guid>("NewMunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MunicipalityId", "Year");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("MunicipalityId", "Year"), false);

                    b.HasIndex("Year");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Year"));

                    b.ToTable("MunicipalityMergers", "MunicipalityRegistryImport");
                });
#pragma warning restore 612, 618
        }
    }
}
