// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipalityRegistry.Projections.Integration;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MunicipalityRegistry.Projections.Integration.Migrations
{
    [DbContext(typeof(IntegrationContext))]
    partial class IntegrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("DesiredState")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ProjectionStates", "integration");
                });

            modelBuilder.Entity("MunicipalityRegistry.Projections.Integration.MunicipalityLatestItem", b =>
                {
                    b.Property<Guid>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("FacilityLanguageDutch")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FacilityLanguageEnglish")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FacilityLanguageFrench")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FacilityLanguageGerman")
                        .HasColumnType("boolean");

                    b.Property<long?>("IdempotenceKey")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<string>("NameDutch")
                        .HasColumnType("text");

                    b.Property<string>("NameEnglish")
                        .HasColumnType("text");

                    b.Property<string>("NameFrench")
                        .HasColumnType("text");

                    b.Property<string>("NameGerman")
                        .HasColumnType("text");

                    b.Property<string>("Namespace")
                        .HasColumnType("text");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("OfficialLanguageDutch")
                        .HasColumnType("boolean");

                    b.Property<bool?>("OfficialLanguageEnglish")
                        .HasColumnType("boolean");

                    b.Property<bool?>("OfficialLanguageFrench")
                        .HasColumnType("boolean");

                    b.Property<bool?>("OfficialLanguageGerman")
                        .HasColumnType("boolean");

                    b.Property<string>("PuriId")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("VersionString")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("VersionTimestamp");

                    b.HasKey("MunicipalityId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("IsRemoved");

                    b.HasIndex("NameDutch");

                    b.HasIndex("NameEnglish");

                    b.HasIndex("NameFrench");

                    b.HasIndex("NameGerman");

                    b.HasIndex("NisCode")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("Status");

                    b.ToTable("municipalities2", "integration");
                });
#pragma warning restore 612, 618
        }
    }
}
